name: CI

on: 
  push:

jobs:
  pip:
    uses: Geode-solutions/actions/.github/workflows/upgrade-pip.yml@master
    secrets: inherit
    with:
      directory: "server"

  pip2:
    needs: pip
    uses: Geode-solutions/actions/.github/workflows/upgrade-pip.yml@master
    secrets: inherit
    with:
      directory: "server/bindings/python"

  format:
    needs: pip2
    uses: Geode-solutions/actions/.github/workflows/format.yml@master
    secrets: inherit
  
  build-linux:
    runs-on: ubuntu-latest
    container: "ghcr.io/geode-solutions/centos:master"
    needs: format
    strategy:
      matrix:
        config:
        - {python: "3.8", tag: "cp38-cp38"}
        - {python: "3.9", tag: "cp39-cp39"}
        - {python: "3.10", tag: "cp310-cp310"}

    steps:
    - uses: actions/checkout@v3
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-centos-${{ matrix.config.python }}-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-rhel.tar.gz'
        token: ${{ secrets.TOKEN }}
    - name: Compile
      run: |
        export PATH=/opt/python/${{ matrix.config.tag }}/bin:$PATH
        python -m pip install wheel
        npm config set cmake_PYTHON_VERSION ${{ matrix.config.python }}
        npm config set cmake_CMAKE_PREFIX_PATH ${{ steps.opengeode.outputs.path }}
        npm install
        npm run package -- version linux
        npm run wheel
      env:
        PYTHON_EXE: /opt/python/${{ matrix.config.tag }}/bin/python
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}    

  build-windows:
    runs-on: windows-2019
    needs: format
    strategy:
      matrix:
        config:
        - {python: "3.8", tag: "cp38-cp38"}
        - {python: "3.9", tag: "cp39-cp39"}
        - {python: "3.10", tag: "cp310-cp310"}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Set up Python ${{ matrix.config.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-win64-${{ matrix.config.python }}-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-win64.zip'
        token: ${{ secrets.TOKEN }}
    - name: Compile
      run: |
        pip install wheel
        npm install
        npm run package -- version win64
        npx cmake-js compile -d server -O build --CDPYTHON_VERSION="${{ matrix.config.python }}" --CDCMAKE_PREFIX_PATH="${{ steps.opengeode.outputs.path }}"
        npx cmake-js compile -T install -d server -O build
        npx cmake-js compile -T wheel -d server -O build
      env:
        PYTHON_EXE: ${{ env.pythonLocation }}/python
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
  semantic-release:
    needs: [build-linux, build-windows]
    uses: Geode-solutions/actions/.github/workflows/release.yml@master
    secrets: inherit