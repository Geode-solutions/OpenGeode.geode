name: CI

on: 
  push:
  pull_request:
  schedule:
    - cron: 0 0 * * *

jobs:
  format:
    runs-on: ubuntu-18.04
    
    steps:
      - uses: actions/checkout@v1
      - uses: Geode-solutions/actions/clang-format@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      
  build-linux:
    runs-on: ubuntu-18.04
    container: ${{ matrix.config.container }}
    needs: format
    strategy:
      matrix:
        config:
        - {container: "geodesolutions/ubuntu", build_type: "Debug", system: ubuntu}
        - {container: "geodesolutions/ubuntu", build_type: "Release", system: ubuntu}
        - {container: "geodesolutions/centos", build_type: "Debug", system: rhel}
        - {container: "geodesolutions/centos", build_type: "Release", system: rhel}

    steps:
    - uses: actions/checkout@v1
    - name: Cache Vtk
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/vtk
        key: vtk-${{ matrix.config.system }}-${{ matrix.config.build_type }}-${{ hashFiles('server/cmake/ConfigureVtk.cmake') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-${{ matrix.config.system }}.tar.gz'
        token: ${{ secrets.TOKEN }}
    - name: Compile
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DCMAKE_PREFIX_PATH:PATH=${GITHUB_WORKSPACE}/${{ steps.opengeode.outputs.path }} ../server
        cmake --build . -- -j2
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}    
  
  build-mac-xcode:
    runs-on: macos-latest
    needs: format
    strategy:
      matrix:
        config: [Debug, Release]

    steps:
    - uses: actions/checkout@v1
    - name: Cache Vtk
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/vtk
        key: vtk-darwin-${{ matrix.config }}-${{ hashFiles('server/cmake/ConfigureVtk.cmake') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-darwin.tar.gz'
        token: ${{ secrets.TOKEN }}
    - name: Compile & Test
      run: |
        mkdir -p build
        cd build
        cmake -G "Xcode" -DCMAKE_PREFIX_PATH:PATH=${GITHUB_WORKSPACE}/${{ steps.opengeode.outputs.path }} ../server
        cmake --build . --config ${{ matrix.config }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  
  build-windows:
    runs-on: windows-2016
    needs: format
    strategy:
      matrix:
        config: [Debug, Release]

    steps:
    - uses: actions/checkout@v1
    - name: Cache Vtk
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/vtk
        key: vtk-win64-${{ matrix.config }}-${{ hashFiles('server/cmake/ConfigureVtk.cmake') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-win64.zip'
        token: ${{ secrets.TOKEN }}
    - name: Compile & Test
      run: |
        if(!(test-path build)) { mkdir build }
        cd build
        cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_PREFIX_PATH:PATH=${GITHUB_WORKSPACE}/${{ steps.opengeode.outputs.path }} ../server
        cmake --build . --config ${{ matrix.config }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
  build-node:
    runs-on: ${{ matrix.os }}
    needs: format

    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2016, macOS-10.14]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: npm install and build
      run: |
        npm install
        npm run build
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}  
        
  semantic-release:
    runs-on: ubuntu-18.04
    needs: [build-linux, build-node, build-mac-xcode, build-windows]
    steps:
    - uses: actions/checkout@v1
    - run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
