name: CD

on:
  push:
    tags: 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: "ghcr.io/geode-solutions/centos:master"
    strategy:
      matrix:
        config:
        - {python: "3.7", tag: "cp37-cp37m"}
        - {python: "3.8", tag: "cp38-cp38"}
        - {python: "3.9", tag: "cp39-cp39"}
        - {python: "3.10", tag: "cp310-cp310"}

    steps:
    - uses: actions/checkout@v3
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-centos-${{ matrix.config.python }}-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-rhel.tar.gz'
        token: ${{ secrets.TOKEN }}
    - name: Generate package
      id: package
      run: |
        export PATH=/opt/python/${{ matrix.config.tag }}/bin:$PATH
        python -m pip install wheel
        npm config set cmake_PYTHON_VERSION ${{ matrix.config.python }}
        npm config set cmake_CMAKE_PREFIX_PATH ${{ steps.opengeode.outputs.path }}
        version="${GITHUB_REF##*/*/v}"
        echo ::set-output name=version::$version
        npm config set cmake_CMAKE_PACKAGE_VERSION $version
        npm install
        npm run package -- $version-python${{ matrix.config.python }} linux 
        npm run wheel
        mv build/wheel/dist/*.whl build/wheel/dist/OpenGeode_core.geode-$version-${{ matrix.config.tag }}-manylinux2014_x86_64.whl
      env:
        PYTHON_EXE: /opt/python/${{ matrix.config.tag }}/bin/python
    - name: PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        packages_dir: "build/wheel/dist/"
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "opengeode-${{ steps.package.outputs.version }}-linux.zip"
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}  

  build-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        config:
        - {python: "3.7", tag: "cp37-cp37m"}
        - {python: "3.8", tag: "cp38-cp38"}
        - {python: "3.9", tag: "cp39-cp39"}
        - {python: "3.10", tag: "cp310-cp310"}

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.config.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-win64-${{ matrix.config.python }}-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-win64.zip'
        token: ${{ secrets.TOKEN }}
    - name: Generate package
      id: package
      run: |
        pip install wheel
        npm config set cmake_PYTHON_VERSION ${{ matrix.config.python }}
        npm config set cmake_CMAKE_PREFIX_PATH ${{ steps.opengeode.outputs.path }}
        $version = ${env:GITHUB_REF} -replace 'refs\/tags\/v', ''
        echo "::set-output name=version::$version"
        npm config set cmake_CMAKE_PACKAGE_VERSION $version
        npm install
        npm run package -- $version-python${{ matrix.config.python }} win64 
        npm run wheel
        mv build/wheel/dist/*.whl build/wheel/dist/OpenGeode_core.geode-$version-${{ matrix.config.tag }}-win_amd64.whl
      env:
        PYTHON_EXE: ${{ env.pythonLocation }}/python
    - name: PyPI
      run: |
        pip install twine
        twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} build/wheel/dist/*
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "opengeode-${{ steps.package.outputs.version }}-win64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        