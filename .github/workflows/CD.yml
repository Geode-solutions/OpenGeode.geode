name: CD

on:
  push:
    tags: 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-18.04
    container: ${{ matrix.config.container }}
    strategy:
      matrix:
        config:
        - {container: "geodesolutions/ubuntu", system: ubuntu}
        - {container: "geodesolutions/centos", system: rhel}

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-${{ matrix.config.system }}-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-${{ matrix.config.system }}.tar.gz'
        token: ${{ secrets.TOKEN }}
    - name: Compile
      run: |
        npm config set cmake_CMAKE_PREFIX_PATH ${GITHUB_WORKSPACE}/${{ steps.opengeode.outputs.path }}
        version="${GITHUB_REF##*/*/}"
        echo ::set-output name=version::$version
        npm install
        npm run package -- $version ${{ matrix.config.system }} ${{ steps.opengeode.outputs.path }}
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "opengeode-${{ steps.package.outputs.version }}-${{ matrix.config.system }}.tar"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}    

  build-mac:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-darwin-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-darwin.tar.gz'
        token: ${{ secrets.TOKEN }}
    - name: Compile
      run: |
        npm config set cmake_CMAKE_PREFIX_PATH ${GITHUB_WORKSPACE}/${{ steps.opengeode.outputs.path }}
        version="${GITHUB_REF##*/*/}"
        echo ::set-output name=version::$version
        npm install
        npm run package -- $version darwin ${{ steps.opengeode.outputs.path }}
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "opengeode-${{ steps.package.outputs.version }}-darwin.tar"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  
  build-windows:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-win64-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-win64.zip'
        token: ${{ secrets.TOKEN }}
    - name: Compile
      run: |
        npm config set cmake_CMAKE_PREFIX_PATH ${GITHUB_WORKSPACE}/${{ steps.opengeode.outputs.path }}
        $version = ${env:GITHUB_REF} -replace 'refs\/tags\/', ''
        echo "::set-output name=version::$version"
        npm install
        npm run package -- $version win64 ${{ steps.opengeode.outputs.path }}
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "opengeode-${{ steps.package.outputs.version }}-win64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        