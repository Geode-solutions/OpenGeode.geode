name: CD

on:
  push:
    tags: 'v*'

jobs:
  build-ubuntu:
    runs-on: ubuntu-18.04
    container: "geodesolutions/ubuntu"
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-ubuntu-${{ matrix.python }}-${{ hashFiles('package-lock.json') }}
    - name: Generate package
      id: package
      run: |
        version="${GITHUB_REF##*/*/v}"
        echo ::set-output name=version::$version-python${{ matrix.python }}
        npm install
        npm run package -- $version-python${{ matrix.python }} ubuntu 
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "opengeode-${{ steps.package.outputs.version }}-ubuntu.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}    

  build-ubuntu-wheel:
    runs-on: ubuntu-18.04
    container: "geodesolutions/centos8"
    strategy:
      matrix:
        config:
        - {python: 3.6, tag: "cp36-cp36m"}
        - {python: 3.7, tag: "cp37-cp37m"}
        - {python: 3.8, tag: "cp38-cp38"}

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.config.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-centos-${{ matrix.config.python }}-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-ubuntu.tar.gz'
        token: ${{ secrets.TOKEN }}
    - name: Generate package
      id: package
      run: |
        export PATH=${{ env.pythonLocation }}/bin:$PATH
        python -m pip install wheel
        export Python3_ROOT_DIR=${{ env.pythonLocation }}
        npm config set cmake_PYTHON_VERSION ${{ matrix.config.python }}
        npm config set cmake_CMAKE_PREFIX_PATH ${GITHUB_WORKSPACE}/${{ steps.opengeode.outputs.path }}
        version="${GITHUB_REF##*/*/v}"
        echo ::set-output name=version::$version
        npm config set cmake_CMAKE_PACKAGE_VERSION $version
        npm install
        npm run wheel
        mv build/wheel/dist/*.whl build/wheel/dist/OpenGeode_core.geode-$version-${{ matrix.config.tag }}-manylinux2014_x86_64.whl
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "build/wheel/dist/OpenGeode_core.geode-${{ steps.package.outputs.version }}-${{ matrix.config.tag }}-manylinux2014_x86_64.whl"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        packages_dir: "build/wheel/dist/"
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}  

  build-windows-wheel:
    runs-on: windows-2016
    strategy:
      matrix:
        config:
        - {python: 3.6, tag: "cp36-cp36m"}
        - {python: 3.7, tag: "cp37-cp37m"}

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.config.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-win64-${{ matrix.config.python }}-${{ hashFiles('package-lock.json') }}
    - uses: Geode-solutions/actions/get-release@master
      id: opengeode
      with:
        repository: OpenGeode
        file: '-win64.zip'
        token: ${{ secrets.TOKEN }}
    - name: Generate package
      id: package
      run: |
        pip install wheel
        npm config set cmake_PYTHON_VERSION ${{ matrix.config.python }}
        npm config set cmake_CMAKE_PREFIX_PATH $env:GITHUB_WORKSPACE/${{ steps.opengeode.outputs.path }}
        $version = ${env:GITHUB_REF} -replace 'refs\/tags\/v', ''
        echo "::set-output name=version::$version"
        npm config set cmake_CMAKE_PACKAGE_VERSION $version
        npm install
        npm run wheel
        mv build/wheel/dist/*.whl build/wheel/dist/OpenGeode_core.geode-$version-${{ matrix.config.tag }}-win_amd64.whl
      env:
        Python3_ROOT_DIR: ${{ env.pythonLocation }}
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "build/wheel/dist/OpenGeode_core.geode-${{ steps.package.outputs.version }}-${{ matrix.config.tag }}-win_amd64.whl"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: PyPI
      run: |
        pip install twine
        twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} build/wheel/dist/*
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
  build-windows:
    runs-on: windows-2016
    strategy:
      matrix:
        python: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-win64-${{ matrix.python }}-${{ hashFiles('package-lock.json') }}
    - name: Generate package
      id: package
      run: |
        $version = ${env:GITHUB_REF} -replace 'refs\/tags\/v', ''
        echo "::set-output name=version::$version-python${{ matrix.python }}"
        npm install
        npm run package -- $version-python${{ matrix.python }} win64 
      env:
        Python3_ROOT_DIR: ${{ env.pythonLocation }}
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "opengeode-${{ steps.package.outputs.version }}-win64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        